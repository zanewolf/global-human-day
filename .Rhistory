# change text
geom_text(aes(x = x, y = y_lab-txt_dist, label = change_lab), family = ft, size =10, colour = txt, vjust = 1, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_highest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_lowest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
# stacked bars
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = sub_col)) + #bottom rectangle of subcategories
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = col), df_global_cat2) + #top rectangle of major categories
# by binding the data together, you only have to plot one for the other data sets to plot?
#
scale_fill_identity() +
scale_colour_identity() +
ylim(min(-6), 2) +
coord_cartesian(clip = "off") +
labs(
caption = caption,
title = title,
subtitle = str_wrap(subtitle, width = 175)
) +
theme_void() +
theme(
text = element_text(family = ft, size = 32, lineheight = 0.3, colour = txt),
plot.background = element_rect(fill = bg, colour = bg),
plot.title = element_text(size = 150, hjust = 0.1, face = "bold"),
plot.subtitle = element_text(hjust = 0.25,size=60),
# plot.caption = element_markdown(colour = txt, hjust = 0.5, margin = margin(t = 10)),
plot.margin = margin(b = 0, t = 0, r = 0, l = 0)
)
ggsave("global-human-day.png", height = 16, width = 24)
txt_dist <- 0.09
df_global |>
bind_rows(df_highest20) |>
bind_rows(df_lowest20) |>
ggplot() +
# shading rect
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -0.99, ymax = 1.5, fill = "grey95",color="darkgrey") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -3.49, ymax = -1, fill = "white",color="lightblue") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -5.99, ymax = -3.5, fill = "white",color="lightgreen") +
# title text
geom_text(aes(x = x, y = y, label = toupper(title)), title_bar, family = ft, colour = txt, size = 32, vjust = 0, hjust = 0, fontface = "bold") +
# little lines down
geom_segment(aes(x = x, xend = x, y = ymin, yend = y_lab+pt_dist, colour = sub_col)) +
geom_point(aes(x = x, y = ymin, colour = sub_col), size = pt_size) +
geom_point(aes(x = x, y = y_lab+pt_dist, colour = sub_col), size = pt_size) +
# little lines up
geom_segment(aes(x = x, xend = x, y = ymax, yend = y_lab-pt_dist, colour = col), df_global_cat2) +
geom_point(aes(x = x, y = ymax, colour = col), df_global_cat2, size = pt_size) +
geom_point(aes(x = x, y = y_lab-pt_dist, colour = col), df_global_cat2, size = pt_size) +
# text
geom_text(aes(x = x, y = y_lab-txt_dist, label = sub_lab), family = ft, size = 10, colour = txt, vjust = 1, lineheight = 0.3) + #global_cat subcategory labels
geom_text(aes(x = x, y = y_lab, label = hrs_lab), family = ft, size = 12, colour = txt, vjust = 1, lineheight = 0.3, fontface = "bold") + #subcategory total time values for highest and lowest
# cat text
geom_text(aes(x = x, y = y_lab+txt_dist, label = cat_lab), df_global_cat, family = ft, size = 10, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0) +
geom_text(aes(x = x, y = y_lab, label = hrs_lab), filter(df_global_cat, !is.na(cat_lab)), family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_highest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_lowest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
# change text
geom_text(aes(x = x, y = y_lab-txt_dist, label = change_lab), family = ft, size =10, colour = txt, vjust = 1, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_highest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_lowest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
# stacked bars
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = sub_col)) + #bottom rectangle of subcategories
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = col), df_global_cat2) + #top rectangle of major categories
# by binding the data together, you only have to plot one for the other data sets to plot?
#
scale_fill_identity() +
scale_colour_identity() +
ylim(min(-6), 2) +
coord_cartesian(clip = "off") +
labs(
caption = caption,
title = title,
subtitle = str_wrap(subtitle, width = 175)
) +
theme_void() +
theme(
text = element_text(family = ft, size = 32, lineheight = 0.3, colour = txt),
plot.background = element_rect(fill = bg, colour = bg),
plot.title = element_text(size = 150, hjust = 0.1, face = "bold"),
plot.subtitle = element_text(hjust = 0.3,size=60),
# plot.caption = element_markdown(colour = txt, hjust = 0.5, margin = margin(t = 10)),
plot.margin = margin(b = 0, t = 0, r = 0, l = 0)
)
ggsave("global-human-day.png", height = 16, width = 24)
df_global <- global_human_day |>
left_join(df_cats, by = "subcategory") |> # add in the column 'category' to match the corresponding subcategory
arrange(category, desc(hoursPerDay)) |> # sort the df by hours per day per category, not subcategory
mutate(
hrs = cumsum(hoursPerDay), # just adds the value of the previous rows to the current row value, last row should be 24
x = ifelse(row_number() == 1, 0, lag(hrs)) + hoursPerDay/2, #scaling the starting x value to a 24-hr clock, lag() shifts the time value of a time-series data back by a given number of observations, but why add hoursPerDay/2? - used for label placement, midway of time block
xmin = ifelse(row_number() == 1, 0, lag(hrs)), # corresponds to previous row's cumsum value
xmax = hrs, # corresponds to current row's cumsum value
ymin = 0.29-a, #0
ymax = 0.49-a, #0.2
cat_num = as.numeric(factor(category)), #just assigns a number to the categories as a factor, useful for plotting
col = pal[cat_num],# assigns color to category based on the number of the cateogry
y_lab = breathing_space_on_x(x, 1.3, .15, 0.25),
sub_lab = str_wrap(subcategory, 15), #good for wrapping long strings into short paragraphs
# hrs_lab = paste0(str_wrap(subcategory, 10), "\n", to_hm(hoursPerDay*3600)),
hrs_lab = to_hm(hoursPerDay*3600),
y_hrs = breathing_space_on_x(x, 0.5, 0.126, 0.06)
)|>
group_by(category) |>
mutate(
subcat_num = 1:n(), #numbers the subcategories for each category
sub_col = lighten(col, lighten_amount[subcat_num]) #progressively lightens main category color for each additional subcategory color
)  |>
ungroup()
txt_dist <- 0.08
df_global |>
bind_rows(df_highest20) |>
bind_rows(df_lowest20) |>
ggplot() +
# shading rect
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -0.99, ymax = 1.5, fill = "grey95",color="darkgrey") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -3.49, ymax = -1, fill = "white",color="lightblue") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -5.99, ymax = -3.5, fill = "white",color="lightgreen") +
# title text
geom_text(aes(x = x, y = y, label = toupper(title)), title_bar, family = ft, colour = txt, size = 32, vjust = 0, hjust = 0, fontface = "bold") +
# little lines down
geom_segment(aes(x = x, xend = x, y = ymin, yend = y_lab+pt_dist, colour = sub_col)) +
geom_point(aes(x = x, y = ymin, colour = sub_col), size = pt_size) +
geom_point(aes(x = x, y = y_lab+pt_dist, colour = sub_col), size = pt_size) +
# little lines up
geom_segment(aes(x = x, xend = x, y = ymax, yend = y_lab-pt_dist, colour = col), df_global_cat2) +
geom_point(aes(x = x, y = ymax, colour = col), df_global_cat2, size = pt_size) +
geom_point(aes(x = x, y = y_lab-pt_dist, colour = col), df_global_cat2, size = pt_size) +
# text
geom_text(aes(x = x, y = y_lab-txt_dist, label = sub_lab), family = ft, size = 10, colour = txt, vjust = 1, lineheight = 0.3) + #global_cat subcategory labels
geom_text(aes(x = x, y = y_lab, label = hrs_lab), family = ft, size = 12, colour = txt, vjust = 1, lineheight = 0.3, fontface = "bold") + #subcategory total time values for highest and lowest
# cat text
geom_text(aes(x = x, y = y_lab+txt_dist, label = cat_lab), df_global_cat, family = ft, size = 10, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0) +
geom_text(aes(x = x, y = y_lab, label = hrs_lab), filter(df_global_cat, !is.na(cat_lab)), family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_highest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_lowest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
# change text
geom_text(aes(x = x, y = y_lab-txt_dist, label = change_lab), family = ft, size =10, colour = txt, vjust = 1, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_highest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_lowest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
# stacked bars
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = sub_col)) + #bottom rectangle of subcategories
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = col), df_global_cat2) + #top rectangle of major categories
# by binding the data together, you only have to plot one for the other data sets to plot?
#
scale_fill_identity() +
scale_colour_identity() +
ylim(min(-6), 2) +
coord_cartesian(clip = "off") +
labs(
caption = caption,
title = title,
subtitle = str_wrap(subtitle, width = 175)
) +
theme_void() +
theme(
text = element_text(family = ft, size = 32, lineheight = 0.3, colour = txt),
plot.background = element_rect(fill = bg, colour = bg),
plot.title = element_text(size = 150, hjust = 0.1, face = "bold"),
plot.subtitle = element_text(hjust = 0.3,size=60),
# plot.caption = element_markdown(colour = txt, hjust = 0.5, margin = margin(t = 10)),
plot.margin = margin(b = 0, t = 0, r = 0, l = 0)
)
ggsave("global-human-day.png", height = 16, width = 24)
df_global |>
bind_rows(df_highest20) |>
bind_rows(df_lowest20) |>
ggplot() +
# shading rect
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -0.99, ymax = 1.5, fill = "grey95",color="darkgrey") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -3.49, ymax = -1, fill = "white",color="lightblue") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -5.99, ymax = -3.5, fill = "white",color="lightgreen") +
# title text
geom_text(aes(x = x, y = y, label = toupper(title)), title_bar, family = ft, colour = txt, size = 32, vjust = 0, hjust = 0, fontface = "bold") +
# little lines down
geom_segment(aes(x = x, xend = x, y = ymin, yend = y_lab+pt_dist, colour = sub_col)) +
geom_point(aes(x = x, y = ymin, colour = sub_col), size = pt_size) +
geom_point(aes(x = x, y = y_lab+pt_dist, colour = sub_col), size = pt_size) +
# little lines up
geom_segment(aes(x = x, xend = x, y = ymax, yend = y_lab-pt_dist, colour = col), df_global_cat2) +
geom_point(aes(x = x, y = ymax, colour = col), df_global_cat2, size = pt_size) +
geom_point(aes(x = x, y = y_lab-pt_dist, colour = col), df_global_cat2, size = pt_size) +
# text
geom_text(aes(x = x, y = y_lab-txt_dist, label = sub_lab), family = ft, size = 10, colour = txt, vjust = 1, lineheight = 0.3) + #global_cat subcategory labels
geom_text(aes(x = x, y = y_lab, label = hrs_lab), family = ft, size = 12, colour = txt, vjust = 1, lineheight = 0.3, fontface = "bold") + #subcategory total time values for highest and lowest
# cat text
geom_text(aes(x = x, y = y_lab+txt_dist, label = cat_lab), df_global_cat, family = ft, size = 10, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0) +
geom_text(aes(x = x, y = y_lab, label = hrs_lab), filter(df_global_cat, !is.na(cat_lab)), family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_highest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_lowest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
# change text
geom_text(aes(x = x, y = y_lab-txt_dist, label = change_lab), family = ft, size =10, colour = txt, vjust = 1, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_highest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_lowest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
# stacked bars
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = sub_col)) + #bottom rectangle of subcategories
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = col), df_global_cat2) + #top rectangle of major categories
# by binding the data together, you only have to plot one for the other data sets to plot?
#
scale_fill_identity() +
scale_colour_identity() +
ylim(min(-6), 2) +
coord_cartesian(clip = "off") +
labs(
# caption = caption,
title = title,
subtitle = str_wrap(subtitle, width = 175)
) +
theme_void() +
theme(
text = element_text(family = ft, size = 32, lineheight = 0.3, colour = txt),
plot.background = element_rect(fill = bg, colour = bg),
plot.title = element_text(size = 150, hjust = 0.1, face = "bold"),
plot.subtitle = element_text(hjust = 0.3,size=60),
# plot.caption = element_markdown(colour = txt, hjust = 0.5, margin = margin(t = 10)),
plot.margin = margin(b = 0, t = 0, r = 0, l = 0)
)
ggsave("global-human-day.png", height = 16, width = 24)
df_global <- global_human_day |>
left_join(df_cats, by = "subcategory") |> # add in the column 'category' to match the corresponding subcategory
arrange(category, desc(hoursPerDay)) |> # sort the df by hours per day per category, not subcategory
mutate(
hrs = cumsum(hoursPerDay), # just adds the value of the previous rows to the current row value, last row should be 24
x = ifelse(row_number() == 1, 0, lag(hrs)) + hoursPerDay/2, #scaling the starting x value to a 24-hr clock, lag() shifts the time value of a time-series data back by a given number of observations, but why add hoursPerDay/2? - used for label placement, midway of time block
xmin = ifelse(row_number() == 1, 0, lag(hrs)), # corresponds to previous row's cumsum value
xmax = hrs, # corresponds to current row's cumsum value
ymin = 0.29-a, #0
ymax = 0.49-a, #0.2
cat_num = as.numeric(factor(category)), #just assigns a number to the categories as a factor, useful for plotting
col = pal[cat_num],# assigns color to category based on the number of the cateogry
y_lab = breathing_space_on_x(x, 1.3, .15, 0.25),
sub_lab = str_wrap(subcategory, 15), #good for wrapping long strings into short paragraphs
# hrs_lab = paste0(str_wrap(subcategory, 10), "\n", to_hm(hoursPerDay*3600)),
hrs_lab = to_hm(hoursPerDay*3600),
y_hrs = breathing_space_on_x(x, 0.5, 0.126, 0.06)
)|>
group_by(category) |>
mutate(
subcat_num = 1:n(), #numbers the subcategories for each category
sub_col = lighten(col, lighten_amount[subcat_num]) #progressively lightens main category color for each additional subcategory color
)  |>
ungroup()
df_global_cat <- global_human_day |>
left_join(df_cats, by = "subcategory") |>
group_by(category) |>
summarise(
hoursPerDay = sum(hoursPerDay)
) |>
mutate(
hrs = cumsum(hoursPerDay),
x = ifelse(row_number() == 1, 0, lag(hrs)) + hoursPerDay/2,
xmin = ifelse(row_number() == 1, 0, lag(hrs)),
xmax = hrs,
ymin = 0.51-a, #0.21
ymax = 0.61-a, #0.41
cat_num = as.numeric(factor(category)),
col = pal[cat_num],
y_lab = breathing_space_on_x(x, 1.2, 0.75, -0.25),
cat_lab = str_wrap(category, 15),
hrs_lab = to_hm(hoursPerDay*3600)
)
df_highest20 <- all_countries |>
filter(countryIso3 %in% highest20) |>
rename(hoursPerDay = hoursPerDayCombined) |>
group_by(subcategory)|>
summarize(avgHours = mean(hoursPerDay))|>
left_join(
global_human_day |>
select(subcategory, globalHoursPerDay = hoursPerDay),
by = "subcategory"
) |>
right_join(df_cats, by ="subcategory") |>  #add categories back in
arrange(category, desc(avgHours)) |>
mutate(
# avgHours = mean(),
change = avgHours - globalHoursPerDay,
hrs = cumsum(avgHours),
x = ifelse(row_number() == 1, 0, lag(hrs)) + avgHours/2,
xmin = ifelse(row_number() == 1, 0, lag(hrs)),
xmax = hrs,
ymin = -2.21-a, #-1.8-a
ymax = -2.01-a, #-1.6-a
cat_num = as.numeric(factor(category)),
col = pal[cat_num],
hrs_lab = to_hm(avgHours*3600),
change_lab = to_hm(abs(change)*3600),
change_lab = ifelse(change < 0, paste0("-", change_lab), paste0("+", change_lab)),
y_lab = breathing_space_on_x(x, 0.6, -2.35, 0.25),
)  |>
group_by(category) |>
mutate(
subcat_num = 1:n(),
sub_col = lighten(col, lighten_amount[subcat_num])
) |>
ungroup()
df_highest20_cat <- all_countries |>
filter(countryIso3  %in% highest20) |>
rename(hoursPerDay = hoursPerDayCombined) |>
group_by(subcategory)|>
summarize(avgHours = round(mean(hoursPerDay),2)) |>
right_join(df_cats, by ="subcategory")|>
ungroup() |>
group_by(category)|>
summarize(hoursPerDay = sum(avgHours))|>  #add categories back in
arrange(category, desc(hoursPerDay)) |>
left_join(
df_global_cat |>
select(category, mean = hoursPerDay),
by = "category"
) |>
group_by(category) |>
summarise(
hoursPerDay = sum(hoursPerDay),
mean = sum(mean)
) |>
mutate(
change = hoursPerDay - mean,
hrs = cumsum(hoursPerDay),
x = ifelse(row_number() == 1, 0, lag(hrs)) + hoursPerDay/2,
xmin = ifelse(row_number() == 1, 0, lag(hrs)),
xmax = hrs,
ymin = -1.99-a, #-1.59-a
ymax = -1.79-a, #-1.39-a
cat_num = as.numeric(factor(category)),
col = pal[cat_num],
y_lab = breathing_space_on_x(x, 0.6, -1.65, -0.25),
hrs_lab = to_hm(hoursPerDay*3600),
change_lab = to_hm(abs(change)*3600),
change_lab = ifelse(change < 0, paste0("-", change_lab), paste0("+", change_lab)),
)
df_lowest20 <- all_countries |>
filter(countryIso3 %in% lowest20) |>
rename(hoursPerDay = hoursPerDayCombined) |>
group_by(subcategory)|>
summarize(avgHours = mean(hoursPerDay))|>
left_join(
global_human_day |>
select(subcategory, globalHoursPerDay = hoursPerDay),
by = "subcategory"
) |>
right_join(df_cats, by ="subcategory") |>  #add categories back in
arrange(category, desc(avgHours)) |>
mutate(
# avgHours = mean(),
change = avgHours - globalHoursPerDay,
hrs = cumsum(avgHours),
x = ifelse(row_number() == 1, 0, lag(hrs)) + avgHours/2,
xmin = ifelse(row_number() == 1, 0, lag(hrs)),
xmax = hrs,
ymin = -4.71-a, #-1.8-a
ymax = -4.51-a, #-1.6-a
cat_num = as.numeric(factor(category)),
col = pal[cat_num],
hrs_lab = to_hm(avgHours*3600),
change_lab = to_hm(abs(change)*3600),
change_lab = ifelse(change < 0, paste0("-", change_lab), paste0("+", change_lab)),
y_lab = breathing_space_on_x(x, 0.6, -4.85, 0.25),
)  |>
group_by(category) |>
mutate(
subcat_num = 1:n(),
sub_col = lighten(col, lighten_amount[subcat_num])
) |>
ungroup()
df_lowest20_cat <- all_countries |>
filter(countryIso3  %in% lowest20) |>
rename(hoursPerDay = hoursPerDayCombined) |>
group_by(subcategory)|>
summarize(avgHours = round(mean(hoursPerDay),2)) |>
right_join(df_cats, by ="subcategory")|>
ungroup() |>
group_by(category)|>
summarize(hoursPerDay = sum(avgHours))|>  #add categories back in
arrange(category, desc(hoursPerDay)) |>
left_join(
df_global_cat |>
select(category, mean = hoursPerDay),
by = "category"
) |>
group_by(category) |>
summarise(
hoursPerDay = sum(hoursPerDay),
mean = sum(mean)
) |>
mutate(
change = hoursPerDay - mean,
hrs = cumsum(hoursPerDay),
x = ifelse(row_number() == 1, 0, lag(hrs)) + hoursPerDay/2,
xmin = ifelse(row_number() == 1, 0, lag(hrs)),
xmax = hrs,
ymin = -4.49-a, #-1.59-a
ymax = -4.29-a, #-1.39-a
cat_num = as.numeric(factor(category)),
col = pal[cat_num],
y_lab = breathing_space_on_x(x, 0.6, -4.15, -0.25),
hrs_lab = to_hm(hoursPerDay*3600),
change_lab = to_hm(abs(change)*3600),
change_lab = ifelse(change < 0, paste0("-", change_lab), paste0("+", change_lab)),
)
df_global_cat2 <- df_global_cat |>
bind_rows(df_highest20_cat) |>
bind_rows(df_lowest20_cat)
df_global |>
bind_rows(df_highest20) |>
bind_rows(df_lowest20) |>
ggplot() +
# shading rect
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -0.99, ymax = 1.5, fill = "grey95",color="darkgrey") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -3.49, ymax = -1, fill = "white",color="lightblue") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -5.99, ymax = -3.5, fill = "white",color="lightgreen") +
# title text
geom_text(aes(x = x, y = y, label = toupper(title)), title_bar, family = ft, colour = txt, size = 32, vjust = 0, hjust = 0, fontface = "bold") +
# little lines down
geom_segment(aes(x = x, xend = x, y = ymin, yend = y_lab+pt_dist, colour = sub_col)) +
geom_point(aes(x = x, y = ymin, colour = sub_col), size = pt_size) +
geom_point(aes(x = x, y = y_lab+pt_dist, colour = sub_col), size = pt_size) +
# little lines up
geom_segment(aes(x = x, xend = x, y = ymax, yend = y_lab-pt_dist, colour = col), df_global_cat2) +
geom_point(aes(x = x, y = ymax, colour = col), df_global_cat2, size = pt_size) +
geom_point(aes(x = x, y = y_lab-pt_dist, colour = col), df_global_cat2, size = pt_size) +
# text
geom_text(aes(x = x, y = y_lab-txt_dist, label = sub_lab), family = ft, size = 10, colour = txt, vjust = 1, lineheight = 0.3) + #global_cat subcategory labels
geom_text(aes(x = x, y = y_lab, label = hrs_lab), family = ft, size = 12, colour = txt, vjust = 1, lineheight = 0.3, fontface = "bold") + #subcategory total time values for highest and lowest
# cat text
geom_text(aes(x = x, y = y_lab+txt_dist, label = cat_lab), df_global_cat, family = ft, size = 10, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0) +
geom_text(aes(x = x, y = y_lab, label = hrs_lab), filter(df_global_cat, !is.na(cat_lab)), family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_highest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_lowest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
# change text
geom_text(aes(x = x, y = y_lab-txt_dist, label = change_lab), family = ft, size =10, colour = txt, vjust = 1, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_highest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_lowest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
# stacked bars
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = sub_col)) + #bottom rectangle of subcategories
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = col), df_global_cat2) + #top rectangle of major categories
# by binding the data together, you only have to plot one for the other data sets to plot?
#
scale_fill_identity() +
scale_colour_identity() +
ylim(min(-6), 2) +
coord_cartesian(clip = "off") +
labs(
# caption = caption,
title = title,
subtitle = str_wrap(subtitle, width = 175)
) +
theme_void() +
theme(
text = element_text(family = ft, size = 32, lineheight = 0.3, colour = txt),
plot.background = element_rect(fill = bg, colour = bg),
plot.title = element_text(size = 150, hjust = 0.1, face = "bold"),
plot.subtitle = element_text(hjust = 0.3,size=60),
# plot.caption = element_markdown(colour = txt, hjust = 0.5, margin = margin(t = 10)),
plot.margin = margin(b = 0, t = 0, r = 0, l = 0)
)
ggsave("global-human-day.png", height = 16, width = 24)
subtitle <-
"           Global Human Day estimates how all humans spend their time on any given day using a generalized, physical outcome–based categorisation that facilitates the integration of data from hundreds of diverse datasets.
Compared with the global average, people living in the 20 countries with the highest Human Development Index (HDI) spend about a half hour more in passive/interactive/social experiences (or more casually reframed as hobbies and/or socialization) and resource allocation, and about forty minutes less in food growth and collection.
Meanwhile, people living in the 20 countries with the lowest HDI spend roughly 20 minutes more in both school and food preparation each day, and twenty minutes less in hobbies and/or socialization experiences. "
df_global |>
bind_rows(df_highest20) |>
bind_rows(df_lowest20) |>
ggplot() +
# shading rect
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -0.99, ymax = 1.5, fill = "grey95",color="darkgrey") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -3.49, ymax = -1, fill = "white",color="lightblue") +
annotate("rect", xmin = -0.5, xmax = 24.5, ymin = -5.99, ymax = -3.5, fill = "white",color="lightgreen") +
# title text
geom_text(aes(x = x, y = y, label = toupper(title)), title_bar, family = ft, colour = txt, size = 32, vjust = 0, hjust = 0, fontface = "bold") +
# little lines down
geom_segment(aes(x = x, xend = x, y = ymin, yend = y_lab+pt_dist, colour = sub_col)) +
geom_point(aes(x = x, y = ymin, colour = sub_col), size = pt_size) +
geom_point(aes(x = x, y = y_lab+pt_dist, colour = sub_col), size = pt_size) +
# little lines up
geom_segment(aes(x = x, xend = x, y = ymax, yend = y_lab-pt_dist, colour = col), df_global_cat2) +
geom_point(aes(x = x, y = ymax, colour = col), df_global_cat2, size = pt_size) +
geom_point(aes(x = x, y = y_lab-pt_dist, colour = col), df_global_cat2, size = pt_size) +
# text
geom_text(aes(x = x, y = y_lab-txt_dist, label = sub_lab), family = ft, size = 10, colour = txt, vjust = 1, lineheight = 0.3) + #global_cat subcategory labels
geom_text(aes(x = x, y = y_lab, label = hrs_lab), family = ft, size = 12, colour = txt, vjust = 1, lineheight = 0.3, fontface = "bold") + #subcategory total time values for highest and lowest
# cat text
geom_text(aes(x = x, y = y_lab+txt_dist, label = cat_lab), df_global_cat, family = ft, size = 10, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0) +
geom_text(aes(x = x, y = y_lab, label = hrs_lab), filter(df_global_cat, !is.na(cat_lab)), family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_highest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
geom_text(aes(x = x, y = y_lab+txt_dist, label = hrs_lab), df_lowest20_cat, family = ft, size = 12, colour = txt, hjust = 0.5, lineheight = 0.3, vjust = 0, fontface = "bold") +
# change text
geom_text(aes(x = x, y = y_lab-txt_dist, label = change_lab), family = ft, size =10, colour = txt, vjust = 1, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_highest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
geom_text(aes(x = x, y = y_lab, label = change_lab), df_lowest20_cat, family = ft, size = 10, colour = txt, vjust = 0, lineheight = 0.3) +
# stacked bars
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = sub_col)) + #bottom rectangle of subcategories
geom_rect(aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = col), df_global_cat2) + #top rectangle of major categories
# by binding the data together, you only have to plot one for the other data sets to plot?
#
scale_fill_identity() +
scale_colour_identity() +
ylim(min(-6), 2) +
coord_cartesian(clip = "off") +
labs(
# caption = caption,
title = title,
subtitle = str_wrap(subtitle, width = 175)
) +
theme_void() +
theme(
text = element_text(family = ft, size = 32, lineheight = 0.3, colour = txt),
plot.background = element_rect(fill = bg, colour = bg),
plot.title = element_text(size = 150, hjust = 0.1, face = "bold"),
plot.subtitle = element_text(hjust = 0.3,size=60),
# plot.caption = element_markdown(colour = txt, hjust = 0.5, margin = margin(t = 10)),
plot.margin = margin(b = 0, t = 0, r = 0, l = 0)
)
ggsave("global-human-day.png", height = 16, width = 24)
